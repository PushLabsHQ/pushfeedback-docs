[{"title":"Basic configuration","type":0,"sectionRef":"#","url":"/configuration/basic-configuration","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#usage","content":"To customize the properties, you need to set the appropriate attributes on the &lt;feedback-button&gt; element in your HTML. For example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; button-style=&quot;dark&quot; hide-icon=&quot;true&quot;&gt;Share feedback&lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#properties","content":"The table below lists all the available properties you can set: Property\tDescriptionproject\tRequired Type: string The project ID. button-position\tType: string Default value: default Available values: default, bottom-right, center-right Position of the button. button-style\tType: string Default value: default Available values: default, dark, light Style of the button. custom-font\tType: boolean Default value: false When set to true, the Inter font will not be loaded. Useful if your site already uses a different font, enabling a quicker load time. email\tType: string Initial value for the email input field. When set, the email address input is hidden. hide-icon\tType: boolean Default value: false Whether to hide the button icon. hide-screenshot-button\tType: boolean Default value: false Whether to hide the screenshot button. modal-position\tType: string Default value: center Available values: center, sidebar-right, sidebar-left, top-right, top-left, bottom-right, bottom-left, center-right, center-left Position of the feedback modal. "},{"title":"Examples​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#examples","content":"Here you'll find practical examples to guide you in customizing the PushFeedback button for various use cases. "},{"title":"Change the button style​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#change-the-button-style","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/rNQrojP&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback button styles&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Create a floating button​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#create-a-floating-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/PoxBXmm&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Floating feedback buttons&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Add the widget to any button​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#add-the-widget-to-any-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQxyeY&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Change modal position​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#change-modal-position","content":"info For an optimal viewing experience of this demo, select the 0.5x zoom level on CodePen. See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQZqwZ&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback widget modal position&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Prefill email​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#prefill-email","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/yLQROXr&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Prefill email&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Styles","type":0,"sectionRef":"#","url":"/configuration/styles","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Styles","url":"/configuration/styles#usage","content":"To customize these properties, define them in your website's CSS using the :root selector for global changes or a specific selector to target particular areas: :root { --feedback-primary-color: #00D68F; ... }  "},{"title":"Properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#properties","content":"The tables below lists all the available properties you can override: "},{"title":"Global properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#global-properties","content":"Property\tDescription--feedback-primary-color\tDefault value: #0070F4 Primary color used for important elements and feedback. --feedback-secondary-color\tDefault value: #f1f3f4 Secondary color used for UI backgrounds and secondary elements. --feedback-light-color\tDefault value: #ccc Light color used for subtle UI elements, borders, and backgrounds. --feedback-dark-color\tDefault value: #191919 Dark color primarily used for text and dark UI elements. --feedback-text-color\tDefault value: #5f6368 General text color for feedback. --feedback-white-color\tDefault value: #fff Standard white color used across the UI. "},{"title":"Fonts properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#fonts-properties","content":"Property\tDescription--feedback-font-family\tDefault value: &quot;Inter&quot;, &quot;Tahoma&quot;, &quot;sans-serif&quot; The primary font family for the feedback system. --feedback-heading-font-size\tDefault value: 16px Font size for headings within feedback. --feedback-text-font-size\tDefault value: 14px Font size for general text within feedback. "},{"title":"Feedback button properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-button-properties","content":"Property\tDescription--feedback-button-border-radius\tDefault value: 20px Border radius for the feedback button. --feedback-button-text-font-size\tDefault value: var(--feedback-text-font-size) Font size of the text inside the feedback button. --feedback-button-text-font-weight\tDefault value: 600 Font weight of the text inside the feedback button. --feedback-button-light-bg-color\tDefault value: var(--feedback-white-color) Background color for the light version of the feedback button. --feedback-button-dark-bg-color\tDefault value: var(--feedback-primary-color) Background color for the dark version of the feedback button. --feedback-button-z-index\tDefault value: 300 Z-index value for the feedback button. "},{"title":"Feedback modal properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-modal-properties","content":"Property\tDescription--feedback-modal-wrapper-z-index\tDefault value: 300 Z-index value for the modal wrapper. --feedback-modal-content-bg-color\tDefault value: var(--feedback-white-color) Background color for the modal content. --feedback-modal-content-border-color\tDefault value: var(--feedback-light-color) Border color for the modal content. --feedback-modal-content-font-family\tDefault value: var(--feedback-font-family) Font family for the modal content. --feedback-modal-content-text-color\tDefault value: var(--feedback-text-color) Text color inside the modal. --feedback-modal-header-text-color\tDefault value: var(--feedback-dark-color) Text color for the modal header. --feedback-modal-header-font-size\tDefault value: var(--feedback-heading-font-size) Font size for the modal header text. --feedback-modal-header-font-family\tDefault value: var(--feedback-font-family) Font family for the modal header. --feedback-modal-input-font-size\tDefault value: var(--feedback-text-font-size) Font size for input fields in the modal. --feedback-modal-button-font-size\tDefault value: var(--feedback-text-font-size) Font size for buttons in the modal. --feedback-modal-message-font-size\tDefault value: var(--feedback-text-font-size) Font size for messages in the modal. --feedback-modal-button-bg-color\tDefault value: var(--feedback-white-color) Background color for buttons in the modal. --feedback-modal-input-bg-color\tDefault value: var(--feedback-secondary-color) Background color for input fields in the modal. --feedback-modal-input-border-color\tDefault value: transparent Border color for input fields in the modal. --feedback-modal-input-border-radius\tDefault value: 0 Border radius for input fields in the modal. --feedback-modal-close-bg-color\tDefault value: var(--feedback-white-color) Background color for the modal close button. --feedback-modal-content-border-radius\tDefault value: 8px Border radius for the modal content. --feedback-modal-content-z-index\tDefault value: 300 Z-index value for the modal content. "},{"title":"Feedback modal screenshot properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-modal-screenshot-properties","content":"Property\tDescription--feedback-modal-screenshot-bg-color\tDefault value: rgba(0, 0, 0, 0.4) Background color for the modal screenshot. --feedback-modal-screnshot-z-index\tDefault value: 100 Z-index value for the modal screenshot. --feedback-modal-screenshot-header-bg-color\tDefault value: var(--feedback-white-color) Background color for the modal screenshot header. --feedback-modal-screenshot-header-text-color\tDefault value: var(--feedback-dark-color) Text color for the modal screenshot header. --feedback-modal-screenshot-header-z-index\tDefault value: 250 Z-index value for the modal screenshot header. --feedback-modal-element-hover-border-color\tDefault value: var(--feedback-primary-color) Border color for hovered elements in the modal screenshot. --feedback-modal-element-selected-border-color\tDefault value: var(--feedback-primary-color) Border color for selected elements in the modal screenshot. "},{"title":"Examples​","type":1,"pageTitle":"Styles","url":"/configuration/styles#examples","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/abQRZNw&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"White-label","type":0,"sectionRef":"#","url":"/configuration/whitelabel","content":"","keywords":""},{"title":"Steps​","type":1,"pageTitle":"White-label","url":"/configuration/whitelabel#steps","content":"Follow the steps below to enable this feature: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, click on the Teams link in the top navigation bar. Within the Teams settings, look for the Whitelabel option. Activate this option to enable white labeling. Save your settings by clicking the Save button. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget. The PushFeedback logo should no longer be visible at the bottom of the widget. With the logo removed, your feedback widget will seamlessly blend with your website, providing a consistent user experience. "},{"title":"Text","type":0,"sectionRef":"#","url":"/configuration/text","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Text","url":"/configuration/text#usage","content":"To customize the textual properties, set the respective attributes on the &lt;feedback-button&gt; element in your HTML. Here's an illustrative example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; email-placeholder=&quot;Enter your email&quot; modal-title=&quot;Give us your thoughts&quot;&gt; Button text &lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Text","url":"/configuration/text#properties","content":"The table below lists all the available properties you can override: Property\tDescriptionemail-placeholder\tType: string Default value: Email address (optional) Placeholder text for the email input field. error-message\tType: string Default value: Please try again later.&quot; Message displayed when there's an error submitting feedback. modal-title-error-4-0-3\tType: string Default value: The request URL does not match the one defined in PushFeedback for this project.&quot; Message displayed when there's a 403 error submitting feedback. modal-title-error-4-0-4\tType: string Default value: We could not find the provided project id in PushFeedback. Message displayed when there's a 404 error submitting feedback. message-placeholder\tType: string Default value: How could this page be more helpful? Placeholder for the feedback message input. modal-title\tType: string Default value: Share your feedback Title of the feedback modal. modal-title-error\tType: string Default value: Oops! Title displayed when there's an error submitting feedback. modal-title-success\tType: string Default value: Thanks for your feedback! Title displayed upon successful feedback submission. screenshot-button-tooltip-text\tType: string Default value: Take a Screenshot Tooltip text for the screenshot button. screenshot-topbar-text\tType: string Default value: SELECT AN ELEMENT ON THE PAGE Instructional text when taking a screenshot. send-button-text\tType: string Default value: Send Text for the button that submits feedback.  "},{"title":"Example​","type":1,"pageTitle":"Text","url":"/configuration/text#example","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/MWzPyvM&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Feedback widget for Antora","type":0,"sectionRef":"#","url":"/installation/antora","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.An Antora project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#installation","content":"To integrate the PushFeedback widget into your Antora site: Modify the UI bundle: If you're using a custom UI bundle for your Antora project, navigate to the UI bundle's directory. If not, you'll first need to clone Antora's default UI bundle. git clone https://gitlab.com/antora/antora-ui-default.git Locate the head.hbs file, which is usually under src/partials, and insert the following code: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Locate the footer.hbs or the specific file where you'd like the feedback button to appear. Just before the closing tags in that file, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Build the project: If you're using a custom UI, make sure to re-bundle it and then run the Antora command to build your project.If you cloned the default UI, you'd have to integrate it as a local UI and then run Antora with the --ui-bundle-url flag to point to your modified local UI bundle. Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for HTML sites","type":0,"sectionRef":"#","url":"/installation/cdn","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#installation","content":"To integrate the PushFeedback widget into your website: Insert the following code within the &lt;head&gt; section of your site's HTML: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Gatsby","type":0,"sectionRef":"#","url":"/installation/gatsby","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Gatsby application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#installation","content":"To integrate the PushFeedback widget into your Gatsby site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. In the main component where you wish to place the feedback button (often src/pages/index.js), embed the PushFeedback button: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; const IndexPage = () =&gt; { useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return ( &lt;div className=&quot;page-layout&quot;&gt; {/* Other components and content */} &lt;FeedbackButton project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/FeedbackButton&gt; &lt;/div&gt; ); } export default IndexPage; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Gatsby app by running gatsby develop in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Docusaurus","type":0,"sectionRef":"#","url":"/installation/docusaurus","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Docusaurus site and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#installation","content":"To integrate the PushFeedback widget into your Docusaurus site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install docusaurus-pushfeedback Add the plugin to your Docusaurus config file docusaurus.config.js: plugins: [ [ 'docusaurus-pushfeedback',{ project: '&lt;YOUR_PROJECT_ID&gt;' } ] ], Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Docusaurus project by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Customization​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#customization","content":"You can customize the PushFeedback widget to suit your needs. For example, you can change the widget's position, color, and more. To do so, you can add any of the following configuration options to the plugin formatted as camelCase. Here's an example: plugins: [ [ 'docusaurus-pushfeedback',{ project: '&lt;YOUR_PROJECT_ID&gt;' } ] ],  "},{"title":"Advanced setup: Custom placement with Swizzling​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#advanced-setup-custom-placement-with-swizzling","content":"This alternative installation method is best for those projects that require granular control over the widget's location. To integrate the PushFeedback widget into your Docusaurus site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react For Docusaurus, the best approach is to swizzle the original footer component to embed the PushFeedback button. This ensures the feedback button is loaded just before the closing body tag for optimal performance. Begin by using the npm run swizzle command to start the swizzle process: npm run swizzle @docusaurus/theme-classic Footer When prompted with the question: Do you want to --wrap the component instead? (Y/N), choose Y for &quot;Yes&quot;. By choosing to wrap, Docusaurus will create a wrapper component for the Footer in the src/theme directory. This allows you to extend the original footer component without modifying its intrinsic content. After swizzling, navigate to src/theme/Footer/index.js in your project directory. Now, integrate the PushFeedback button: import React, {useEffect} from 'react'; import Footer from '@theme-original/Footer'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; export default function FooterWrapper(props) { useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return ( &lt;&gt; &lt;FeedbackButton project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/FeedbackButton&gt; &lt;Footer {...props} /&gt; &lt;/&gt; ) } Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Docusaurus project by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Feedback widget for Hugo","type":0,"sectionRef":"#","url":"/installation/hugo","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Hugo project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#installation","content":"To integrate the PushFeedback widget into your Hugo site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd your-hugo-site/themes/your-theme-name/ Replace your-hugo-site with the path to your Hugo site and your-theme-name with the name of the theme you're using. Find the head partial, which is often located under layouts/partials/. Add the following code to this file: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Next, find the footer partial (or wherever you'd like the feedback button to be placed) and add the following code just before the closing tags: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Hugo project root and run: hugo server Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for MkDocs","type":0,"sectionRef":"#","url":"/installation/mkdocs","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A MkDocs project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#installation","content":"To integrate the PushFeedback widget into your MkDocs site: Navigate to your docs folder and locate the overrides directory (create one if it doesn't exist). Inside the overrides directory, create or edit the file named base.html. info The file names of the templates to override and the block names you need to override might be different, depending on your theme. This example is specifically for the Material for MkDocs theme. Always refer to your theme's documentation or source templates to ensure accurate customization. In this base.html, extend the base template and override the necessary sections. Here's what you should add: {% extends &quot;base.html&quot; %} {% block extrahead %} &lt;!-- PushFeedback styles --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;!-- PushFeedback script as ES6 module --&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; {% endblock %} {% block content %} {{ super() }} &lt;!-- Feedback button --&gt; &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; {% endblock %} Ensure your mkdocs.yml points to the overrides directory: theme: name: 'material' custom_dir: 'docs/overrides' Build your MkDocs project: mkdocs build Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Jekyll","type":0,"sectionRef":"#","url":"/installation/jekyll","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Jekyll project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#installation","content":"To integrate the PushFeedback widget into your Jekyll site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. Open the _includes/head.html file (or the equivalent file that contains the &lt;head&gt; section in your Jekyll theme). Append the following code: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Open _includes/footer.html or the specific file where you'd like the feedback button to appear. Add the following snippet just before its closing tags: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Jekyll project root and run: jekyll build Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for NPM projects","type":0,"sectionRef":"#","url":"/installation/npm","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#installation","content":"To integrate the PushFeedback widget into your site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback Make sure you embed the styles and scripts in your primary JS or entry file: // Incorporate PushFeedback styles import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; // Initialize the PushFeedback widget import 'pushfeedback/dist/pushfeedback/pushfeedback.esm.js'; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for React","type":0,"sectionRef":"#","url":"/installation/react","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A React application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#installation","content":"Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. In the main component where you wish to place the feedback button (often src/App.js), embed the PushFeedback button: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function App() { useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;FeedbackButton project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/FeedbackButton&gt; &lt;/div&gt; ); } export default App; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your React app by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Next.js","type":0,"sectionRef":"#","url":"/installation/nextjs","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Next.js application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#installation","content":"To integrate the PushFeedback widget into your Next.js site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. This will download and install the PushFeedback package into your project. Create a wrapper for the feedback button by creating a file under the path components/pushfeedback.tsx and paste the following code: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { JSX, defineCustomElements } from 'pushfeedback/loader'; import { StyleReactProps } from 'pushfeedback-react/dist/types/react-component-lib/interfaces'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; const DynamicFeedbackButtonComponent = (props: React.JSX.IntrinsicAttributes &amp; JSX.FeedbackButton &amp; Omit&lt;React.HTMLAttributes&lt;HTMLFeedbackButtonElement&gt;, &quot;style&quot;&gt; &amp; StyleReactProps &amp; React.RefAttributes&lt;HTMLFeedbackButtonElement&gt;) =&gt; { useEffect(() =&gt; { defineCustomElements(window); }, []); return &lt;FeedbackButton {...props} /&gt;; }; export default DynamicFeedbackButtonComponent; In the component where you wish to display the feedback button (often _pages/app.tsx or app/layout.tsx), include it shown below: 'use client' import dynamic from 'next/dynamic'; export default function Banner() { const DynamicFeedbackButton = dynamic(() =&gt; import('@/components/utils/pushfeedback'), { ssr: false, }); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;DynamicFeedbackButton project=&quot;c2syqqm916&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot; custom-font=&quot;true&quot;&gt;Share feedback&lt;/DynamicFeedbackButton&gt; &lt;/div&gt; ); Start your Next.js app by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Sphinx","type":0,"sectionRef":"#","url":"/installation/sphinx","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Sphinx project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#installation","content":"To integrate the PushFeedback widget into your Sphinx site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback via PIP: pip install sphinx-pushfeedback Add the extension to your Sphinx project's conf.py file: extensions ['sphinx_pushfeedback'] Configure your project ID in the conf.py file: pushfeedback_project = '&lt;YOUR_PROJECT_ID&gt;' Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Build the documentation: make html Once built, open your documentation in a web browser. Verify that the feedback button appears and works correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#next-steps","content":"You can customize the PushFeedback widget to suit your needs. For example, you can change the widget's position, color, and more. To do so, you can add any of the following configuration options to your conf.py file, with the following modifications: Prefix configuration options with pushfeedback_. For instance, project would be pushfeedback_project. Use underscores instead of hyphens as words separator. For example, button-position becomes pushfeedback_button_position. Here's an example: pushfeedback_button_style = &quot;light&quot;  "},{"title":"Feedback widget for Vue.js","type":0,"sectionRef":"#","url":"/installation/vue","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Vue.js project and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#installation","content":"To integrate the PushFeedback widget into your Vue.js site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback Open your main Vue component or the desired Vue component where you want the feedback widget to appear. Then, incorporate the PushFeedback styles and scripts: &lt;script&gt; // Incorporate PushFeedback styles import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; // Initialize the PushFeedback widget import 'pushfeedback/dist/pushfeedback/pushfeedback.esm.js'; &lt;/script&gt; In the template section of your Vue component, add the following snippet: &lt;template&gt; &lt;!-- Rest of your component's template --&gt; &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt; Share feedback &lt;/feedback-button&gt; &lt;/template&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Vue.js project root and run: npm run serve Open the website in a web browser to verify that the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Wordpress","type":0,"sectionRef":"#","url":"/installation/wordpress","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Wordpress website. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#installation","content":"To embed the PushFeedback widget into your WordPress site: Access the admin dashboard of your WordPress website by navigating to http://yourwebsite.com/wp-admin/. Add the PushFeedback styles and scripts: Navigate to Appearance &gt; Theme Editor. From the right sidebar, select the header.php file to edit the &lt;head&gt; section. Insert the following code within the &lt;head&gt; section: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; To insert the feedback button just before the &lt;/body&gt; tag: While still in the Theme Editor, locate and click on the footer.php file from the right sidebar. Just before the &lt;/body&gt; tag, paste the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Once you've saved your changes, visit your WordPress website in a web browser. Confirm that the feedback button is visible and operational. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Email","type":0,"sectionRef":"#","url":"/integrations/email","content":"","keywords":""},{"title":"Support","type":0,"sectionRef":"#","url":"/support","content":"","keywords":""},{"title":"Getting started​","type":1,"pageTitle":"Support","url":"/support#getting-started","content":"Quickstart: Need help installing PushFeedback? This guide covers all the steps to get you started.Installation guides: Step-by-step installation guides for a range of programming languages and frameworksConfiguration guides: Learn how to configure PushFeedback to match your site's design and requirements.Integration guides: Connect PushFeedback to your existing tools and workflows. "},{"title":"Frequently asked questions (FAQs)​","type":1,"pageTitle":"Support","url":"/support#frequently-asked-questions-faqs","content":"See our FAQs for answers to common questions about PushFeedback. "},{"title":"Contact us​","type":1,"pageTitle":"Support","url":"/support#contact-us","content":"If you can't find the solution to your problem or have further questions, don't hesitate to reach out at support@pushfeedback.com. We're here to help! Our support team is available Monday to Friday, from 9 AM to 5 PM EST. We aim to respond to all queries within 48 hours. "},{"title":"Feedback​","type":1,"pageTitle":"Support","url":"/support#feedback","content":"Your feedback is valuable to us! If you have suggestions or feedback about our platform or support, please let us know. "},{"title":"Prerequisites​","type":1,"pageTitle":"Email","url":"/integrations/email#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Steps​","type":1,"pageTitle":"Email","url":"/integrations/email#steps","content":"To activate the email notification integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Edit button. Move to the second step of the wizard, Email notification setup. Input the email addresses of the team members you'd like to notify when feedback is received. info PushFeedback lets you configure up to three email addresses. If you need to notify more recipients, consider using an email distribution list. Save your changes by clicking Next, then Submit on the final step of the wizard. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The specified email addresses should receive the feedback. "}]