"use strict";(self.webpackChunkpushfeedback=self.webpackChunkpushfeedback||[]).push([[143],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"Docusaurus"},i="Feedback widget for Docusaurus",s={unversionedId:"installation/docusaurus",id:"installation/docusaurus",title:"Docusaurus",description:"Integrate the PushFeedback tool into your Docusaurus project using the Node Package Manager (npm).",source:"@site/docs/installation/docusaurus.md",sourceDirName:"installation",slug:"/installation/docusaurus",permalink:"/installation/docusaurus",draft:!1,tags:[],version:"current",frontMatter:{title:"Docusaurus"},sidebar:"tutorialSidebar",previous:{title:"CDN",permalink:"/installation/cdn"},next:{title:"Next.js",permalink:"/installation/nextjs"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Customization",id:"customization",level:2},{value:"Advanced setup: Custom placement with Swizzling",id:"advanced-setup-custom-placement-with-swizzling",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(c,(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"feedback-widget-for-docusaurus"},"Feedback widget for Docusaurus"),(0,r.kt)("p",null,"Integrate the PushFeedback tool into your Docusaurus project using the Node Package Manager (npm)."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before you begin, you'll need to have the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A PushFeedback account. If you don't have one, ",(0,r.kt)("a",{parentName:"li",href:"https://app.pushfeedback.com/signup"},"sign up for free"),"."),(0,r.kt)("li",{parentName:"ul"},"A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the ",(0,r.kt)("a",{parentName:"li",href:"/#2-create-a-project"},"Quickstart")," guide."),(0,r.kt)("li",{parentName:"ul"},"A Docusaurus site and Node.js installed.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"To integrate the PushFeedback widget into your Docusaurus site:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open your terminal or command prompt. Navigate to your project's root directory using the ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"cd path/to/your/project\n")),(0,r.kt)("p",{parentName:"li"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"path/to/your/project")," with your project's actual directory path.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"With your terminal still open, run the following command to install PushFeedback:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"npm install docusaurus-pushfeedback\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the plugin to your Docusaurus config file ",(0,r.kt)("inlineCode",{parentName:"p"},"docusaurus.config.js"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"plugins: [\n    [\n        'docusaurus-pushfeedback',{\n            project: '<YOUR_PROJECT_ID>'\n        }\n    ]\n],\n")),(0,r.kt)("p",{parentName:"li"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<YOUR_PROJECT_ID>")," with your project's ID from the ",(0,r.kt)("a",{parentName:"p",href:"/#2-create-a-project"},"PushFeedback dashboard"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start your Docusaurus project by running ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn start")," in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"Docusaurus Feedback widget",src:n(1061).Z,width:"2850",height:"1410"})))),(0,r.kt)("h2",{id:"customization"},"Customization"),(0,r.kt)("p",null,"You can customize the PushFeedback widget to suit your needs. For example, you can change the widget's position, color, and more."),(0,r.kt)("p",null,"To do so, you can add any of the following ",(0,r.kt)("a",{parentName:"p",href:"/configuration/basic-configuration"},"configuration")," options to the plugin formatted as camelCase."),(0,r.kt)("p",null,"Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"plugins: [\n    [\n        'docusaurus-pushfeedback',{\n            project: '<YOUR_PROJECT_ID>'\n        }\n    ]\n],\n")),(0,r.kt)("h2",{id:"advanced-setup-custom-placement-with-swizzling"},"Advanced setup: Custom placement with Swizzling"),(0,r.kt)("p",null,"This alternative installation method is best for those projects that require granular control over the widget's location."),(0,r.kt)("p",null,"To integrate the PushFeedback widget into your Docusaurus site:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open your terminal or command prompt. Navigate to your project's root directory using the ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"cd path/to/your/project\n")),(0,r.kt)("p",{parentName:"li"},"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"path/to/your/project")," with your project's actual directory path.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"With your terminal still open, run the following command to install PushFeedback:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"npm install pushfeedback-react\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"For Docusaurus, the best approach is to swizzle the original footer component to embed the PushFeedback button. This ensures the feedback button is loaded just before the closing body tag for optimal performance. Begin by using the npm run swizzle command to start the swizzle process:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"npm run swizzle @docusaurus/theme-classic Footer\n")),(0,r.kt)("p",{parentName:"li"},"When prompted with the question: ",(0,r.kt)("inlineCode",{parentName:"p"},"Do you want to --wrap the component instead? (Y/N)"),", choose ",(0,r.kt)("strong",{parentName:"p"},"Y"),' for "Yes".'),(0,r.kt)("p",{parentName:"li"},"By choosing to wrap, Docusaurus will create a wrapper component for the Footer in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme")," directory. This allows you to extend the original footer component without modifying its intrinsic content.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After swizzling, navigate to ",(0,r.kt)("inlineCode",{parentName:"p"},"src/theme/Footer/index.js")," in your project directory. Now, integrate the PushFeedback button:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  import React, {useEffect} from 'react';\n  import Footer from '@theme-original/Footer';\n\n  import { FeedbackButton } from 'pushfeedback-react';\n  import { defineCustomElements } from 'pushfeedback/loader';\n  import 'pushfeedback/dist/pushfeedback/pushfeedback.css';\n\n  export default function FooterWrapper(props) {\n\n  useEffect(() => {\n      if (typeof window !== 'undefined') {\n      defineCustomElements(window);\n      }\n  }, []);\n\n  return (\n      <>\n      <FeedbackButton project=\"<YOUR_PROJECT_ID>\" button-position=\"bottom-right\" modal-position=\"bottom-right\" button-style=\"light\">Share feedback</FeedbackButton>\n      <Footer {...props} />\n      </>\n  )\n  }  \n")),(0,r.kt)("p",{parentName:"li"},"  Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<YOUR_PROJECT_ID>")," with your project's ID from the ",(0,r.kt)("a",{parentName:"p",href:"/#2-create-a-project"},"PushFeedback dashboard"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start your Docusaurus project by running ",(0,r.kt)("inlineCode",{parentName:"p"},"npm start")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn start")," in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site."))))}d.isMDXComponent=!0},1061:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/docusaurus-856c13de8e9d70aecaeee84bbb8b1784.png"}}]);