"use strict";(self.webpackChunkpushfeedback=self.webpackChunkpushfeedback||[]).push([[5951],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(o),d=r,f=p["".concat(s,".").concat(d)]||p[d]||b[d]||a;return o?n.createElement(f,i(i({ref:t},c),{},{components:o})):n.createElement(f,i({ref:t},c))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=o[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},8859:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>b,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=o(7462),r=(o(7294),o(3905));const a={},i="Feedback button properties",l={unversionedId:"configuration/button-properties",id:"configuration/button-properties",title:"Feedback button properties",description:"The PushFeedback button is highly customizable, allowing you to tailor its appearance and behavior to suit your application's needs. This page lists all available properties you can use to adjust the behavior and appearance of the PushFeedback button in your application.",source:"@site/docs/configuration/button-properties.md",sourceDirName:"configuration",slug:"/configuration/button-properties",permalink:"/configuration/button-properties",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/category/configuration"},next:{title:"button-styles",permalink:"/configuration/button-styles"}},s={},u=[],c={toc:u},p="wrapper";function b(e){let{components:t,...o}=e;return(0,r.kt)(p,(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"feedback-button-properties"},"Feedback button properties"),(0,r.kt)("p",null,"The PushFeedback button is highly customizable, allowing you to tailor its appearance and behavior to suit your application's needs. This page lists all available properties you can use to adjust the behavior and appearance of the PushFeedback button in your application."),(0,r.kt)("p",null,"To customize the properties, you simply need to set the appropriate attributes on the ",(0,r.kt)("inlineCode",{parentName:"p"},"<feedback-button>")," element in your HTML. For example:"),(0,r.kt)("p",null,"`","``html\n",(0,r.kt)("feedback-button",{project:"YOUR_PROJECT_ID","button-style":"alternate","hide-icon":"true"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"The table below lists all the available properties you can set, their corresponding HTML attributes, their type, potential values (if applicable), and a brief description.\n\n| Property (attribute)                       | Type     | Available values                  | Description                                                           |\n| ------------------------------------------ | -------- | --------------------------------- | --------------------------------------------------------------------- |\n| `buttonPosition` (`button-position`)       | `string` | `'default'`, ...                  | Position of the button. Default is `'default'`.                       |\n| `buttonStyle` (`button-style`)             | `string` | `'default'`, ...                  | Style of the button. Default is `'default'`.                          |\n| `email` (`email`)                          | `string` |                                 | The default email address. Empty by default.                          |\n| `emailPlaceholder` (`email-placeholder`)   | `string` |                                 | Placeholder for the email input.                                      |\n| `errorModalTitle` (`error-modal-title`)    | `string` |                                 | Title for the error modal.                                            |\n| `hideIcon` (`hide-icon`)                   | `boolean`| `true`, `false`                  | Whether to hide the button icon.                                      |\n| `hideScreenshotButton` (`hide-screenshot-button`) | `boolean` | `true`, `false` | Whether to hide the screenshot button.                                |\n| `messagePlaceholder` (`message-placeholder`) | `string` |                             | Placeholder for the feedback message input.                           |\n| `modalPosition` (`modal-position`)         | `string` | `'center'`, ...                  | Position of the feedback modal.                                       |\n| `modalTitle` (`modal-title`)               | `string` |                                 | Title of the feedback modal.                                          |\n| `project` (`project`)                      | `string` |                                 | The project ID. Required.                                            |\n| `screenshotButtonTooltipText` (`screenshot-button-tooltip-text`) | `string` |     | Tooltip text for the screenshot button.                               |\n| `screenshotTopbarText` (`screenshot-topbar-text`) | `string` |                       | Text shown on the screenshot's top bar.                               |\n| `sendButtonText` (`send-button-text`)      | `string` |                                 | Text for the send feedback button.                                    |\n| `successModalTitle` (`success-modal-title`) | `string` |                                | Title for the success modal.                                          |\n\nFor properties with `...` under \"Available values\", please consult the main PushFeedback documentation or the specific property's documentation to see the full list of available options.\n")))}b.isMDXComponent=!0}}]);