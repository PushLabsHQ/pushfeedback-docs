[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":""},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":""},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":""},{"title":"Styles","type":0,"sectionRef":"#","url":"/configuration/styles","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Styles","url":"/configuration/styles#usage","content":"To customize these properties, define them in your website's CSS using the :root selector for global changes or a specific selector to target particular areas: :root { --feedback-primary-color: #00D68F; ... }  "},{"title":"Properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#properties","content":"The tables below lists all the available properties you can override: "},{"title":"Global properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#global-properties","content":"Property\tDescription--feedback-primary-color\tDefault value: #0070F4 Primary color used for important elements and feedback. --feedback-secondary-color\tDefault value: #fbfbfb Secondary color used for UI backgrounds and secondary elements. --feedback-light-color\tDefault value: #ccc Light color used for subtle UI elements, borders, and backgrounds. --feedback-dark-color\tDefault value: #191919 Dark color primarily used for text and dark UI elements. --feedback-text-color\tDefault value: #5f6368 General text color for feedback. --feedback-white-color\tDefault value: #fff Standard white color used across the UI. --feedback-font-family\tDefault value: &quot;Tahoma&quot;, &quot;sans-serif&quot; The primary font family for the feedback system. --feedback-heading-font-size\tDefault value: 16px Font size for headings within feedback. --feedback-text-font-size\tDefault value: 14px Font size for general text within feedback. "},{"title":"Feedback button properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-button-properties","content":"Property\tDescription--feedback-button-z-index\tDefault value: 300 Z-index value for the feedback button, controlling its stack order. "},{"title":"Feedback modal properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-modal-properties","content":"Property\tDescription--feedback-modal-wrapper-z-index\tDefault value: 300 Z-index value for the modal wrapper. --feedback-modal-content-bg-color\tDefault value: var(--feedback-white-color) Background color for the modal content. --feedback-modal-content-border-color\tDefault value: var(--feedback-light-color) Border color for the modal content. --feedback-modal-content-font-family\tDefault value: var(--feedback-font-family) Font family for the modal content. --feedback-modal-content-text-color\tDefault value: var(--feedback-text-color) Text color for the modal content. --feedback-modal-header-text-color\tDefault value: var(--feedback-dark-color) Text color for the modal header. --feedback-modal-header-font-size\tDefault value: var(--feedback-heading-font-size) Font size for the modal header. --feedback-modal-input-font-size\tDefault value: var(--feedback-text-font-size) Font size for inputs within the modal. --feedback-modal-button-font-size\tDefault value: var(--feedback-text-font-size) Font size for buttons within the modal. --feedback-modal-button-bg-color\tDefault value: var(--feedback-white-color) Background color for modal buttons. --feedback-modal-button-bg-color-active\tDefault value: var(--feedback-secondary-color) Background color for active modal buttons. --feedback-modal-button-text-color\tDefault value: var(--feedback-dark-color) Text color for modal buttons. --feedback-modal-button-text-color-active\tDefault value: var(--feedback-primary-color) Text color for active modal buttons. --feedback-modal-button-border-color\tDefault value: var(--feedback-light-color) Border color for modal buttons. --feedback-modal-input-border-color\tDefault value: var(--feedback-light-color) Border color for modal inputs. --feedback-modal-input-border-color-focused\tDefault value: var(--feedback-primary-color) Border color for focused modal inputs. --feedback-modal-close-bg-color\tDefault value: var(--feedback-white-color) Background color for the modal close button. --feedback-modal-screenshot-bg-color\tDefault value: rgba(0, 0, 0, 0.3) Background color for screenshots in the modal. --feedback-modal-screenshot-element-hover-border-color\tDefault value: var(--feedback-primary-color) Border color for hovered screenshot elements in the modal. --feedback-modal-screenshot-element-selected-bg-color\tDefault value: var(--feedback-primary-color) Background color for selected screenshot elements. --feedback-modal-screenshot-element-selected-text-color\tDefault value: var(--feedback-white-color) Text color for selected screenshot elements. --feedback-modal-screenshot-element-selected-border-color\tDefault value: var(--feedback-primary-color) Border color for selected screenshot elements. --feedback-modal-screenshot-header-bg-color\tDefault value: var(--feedback-primary-color) Background color for the screenshot header in the modal. --feedback-modal-screenshot-header-z-index\tDefault value: 250 Z-index value for the screenshot header in the modal. --feedback-modal-screenshot-overlay-z-index\tDefault value: 100 Z-index value for the screenshot overlay in the modal. "},{"title":"Examples​","type":1,"pageTitle":"Styles","url":"/configuration/styles#examples","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/abQRZNw&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Basic configuration","type":0,"sectionRef":"#","url":"/configuration/basic-configuration","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#usage","content":"To customize the properties, you need to set the appropriate attributes on the &lt;feedback-button&gt; element in your HTML. For example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; button-style=&quot;dark&quot; hide-icon=&quot;true&quot;&gt;Share feedback&lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#properties","content":"The table below lists all the available properties you can set: Property\tDescriptionproject\tRequired Type: string The project ID. button-position\tType: string Default value: default Available values: default, bottom-right, center-right Position of the button. button-style\tType: string Default value: default Available values: default, dark, light Style of the button. email\tType: string Initial value for the email input field. When set, the email address input is hidden. hide-icon\tType: boolean Default value: false Whether to hide the button icon. hide-screenshot-button\tType: boolean Default value: false Whether to hide the screenshot button. modal-position\tType: string Default value: center Available values: center, top-right, top-left, bottom-right, bottom-left Position of the feedback modal. "},{"title":"Examples​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#examples","content":"Here you'll find practical examples to guide you in customizing the PushFeedback button for various use cases. "},{"title":"Change the button style​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#change-the-button-style","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/rNQrojP&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback button styles&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Create a floating button​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#create-a-floating-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/PoxBXmm&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Floating feedback buttons&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Add the widget to any button​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#add-the-widget-to-any-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQxyeY&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Change modal position​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#change-modal-position","content":"info For an optimal viewing experience of this demo, select the 0.5x zoom level on CodePen. See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQZqwZ&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback widget modal position&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Prefill email​","type":1,"pageTitle":"Basic configuration","url":"/configuration/basic-configuration#prefill-email","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/yLQROXr&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Prefill email&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Text","type":0,"sectionRef":"#","url":"/configuration/text","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Text","url":"/configuration/text#usage","content":"To customize the textual properties, set the respective attributes on the &lt;feedback-button&gt; element in your HTML. Here's an illustrative example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; email-placeholder=&quot;Enter your email&quot; modal-title=&quot;Give us your thoughts&quot;&gt; Button text &lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Text","url":"/configuration/text#properties","content":"The table below lists all the available properties you can override: Property\tDescriptionemail-placeholder\tType: string Default value: Email address (optional) Placeholder text for the email input field. message-placeholder\tType: string Default value: How could this page be more helpful? Placeholder for the feedback message input. modal-title\tType: string Default value: Share your feedback Title of the feedback modal. modal-title-error\tType: string Default value: Oops! We didn't receive your feedback. Please try again later. Title displayed when there's an error submitting feedback. modal-title-error-4-0-3\tType: string Default value: Oops! The request URL does not match the one defined in PushFeedback for this project.&quot; Title for a 403 error in the feedback modal. modal-title-error-4-0-4\tType: string Default value: Oops! We could not find the provided project id in PushFeedback. Title for a 404 error in the feedback modal. modal-title-success\tType: string Default value: Thanks for your feedback! Title displayed upon successful feedback submission. screenshot-button-tooltip-text\tType: string Default value: Take a Screenshot Tooltip text for the screenshot button. screenshot-topbar-text\tType: string Default value: SELECT AN ELEMENT ON THE PAGE Instructional text when taking a screenshot. send-button-text\tType: string Default value: Send Text for the button that submits feedback.  "},{"title":"Example​","type":1,"pageTitle":"Text","url":"/configuration/text#example","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/MWzPyvM&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"White-label","type":0,"sectionRef":"#","url":"/configuration/whitelabel","content":"","keywords":""},{"title":"Steps​","type":1,"pageTitle":"White-label","url":"/configuration/whitelabel#steps","content":"Follow the steps below to enable this feature: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, click on the Teams link in the top navigation bar. Within the Teams settings, look for the Whitelabel option. Activate this option to enable white labeling. [TODO: ADD IMAGE HERE] Save your settings by clicking the Save button. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget. The PushFeedback logo should no longer be visible at the bottom of the widget. With the logo removed, your feedback widget will seamlessly blend with your website, providing a consistent user experience. "},{"title":"Docusaurus","type":0,"sectionRef":"#","url":"/installation/docusaurus","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Docusaurus","url":"/installation/docusaurus#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Docusaurus site and Node.js and npm installed. If not, download and install them from Node.js official website. "},{"title":"Steps​","type":1,"pageTitle":"Docusaurus","url":"/installation/docusaurus#steps","content":"To integrate the PushFeedback widget into your Docusaurus site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback This will download and install the PushFeedback package into your project. For Docusaurus, the best approach is to swizzle the original footer component to embed the PushFeedback button. This ensures the feedback button is loaded just before the closing body tag for optimal performance. Begin by using the npm run swizzle command to start the swizzle process: npm run swizzle @docusaurus/theme-classic Footer When prompted with the question: Do you want to --wrap the component instead? (Y/N), choose Y for &quot;Yes&quot;. By choosing to wrap, Docusaurus will create a wrapper component for the Footer in the src/theme directory. This allows you to extend the original footer component without modifying its intrinsic content. After swizzling, navigate to src/theme/Footer/index.js in your project directory. Now, integrate the PushFeedback button: import React, { useEffect } from 'react'; import OriginalFooter from '@theme-original/Footer'; import { applyPolyfills, defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function FooterWrapper(props) { useEffect(() =&gt; { applyPolyfills().then(() =&gt; { defineCustomElements(window); }); }, []); return ( &lt;&gt; &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Share feedback&lt;/feedback-button&gt; &lt;OriginalFooter {...props} /&gt; &lt;/&gt; ); } export default FooterWrapper; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Docusaurus project by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Docusaurus","url":"/installation/docusaurus#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"CDN","type":0,"sectionRef":"#","url":"/installation/cdn","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"CDN","url":"/installation/cdn#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Steps​","type":1,"pageTitle":"CDN","url":"/installation/cdn#steps","content":"To integrate the PushFeedback widget into your website: Insert the following code within the &lt;head&gt; section of your site's HTML: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"CDN","url":"/installation/cdn#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"Next.js","type":0,"sectionRef":"#","url":"/installation/nextjs","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Next.js","url":"/installation/nextjs#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Next.js application and Node.js and npm installed. If not, download and install them from Node.js official website. "},{"title":"Steps​","type":1,"pageTitle":"Next.js","url":"/installation/nextjs#steps","content":"To integrate the PushFeedback widget into your Next.js site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback info If you're using yarn as your package manager, run yarn add pushfeedback instead of the npm command above. This will download and install the PushFeedback package into your project. In the main component where you wish to place the feedback button (often pages/_app.js), embed the PushFeedback button: 'use client' import React, { useEffect } from 'react'; import { applyPolyfills, defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function App() { useEffect(() =&gt; { applyPolyfills().then(() =&gt; { defineCustomElements(window); }); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; &lt;/div&gt; ); } export default App; TypeScript projects If you're using TypeScript in your Next.js project, you might encounter type errors related to the feedback-button. To fix this, you can extend the global type definitions to include the custom elements from PushFeedback. In a d.ts file (e.g., src/global.d.ts), add: declare namespace JSX { interface IntrinsicElements { 'feedback-button': any; } } Start your Next.js app by running npm start or yarn start in your terminal. Once it compiles successfully, verift that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Next.js","url":"/installation/nextjs#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"NPM","type":0,"sectionRef":"#","url":"/installation/npm","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"NPM","url":"/installation/npm#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.Node.js and npm installed. If not, download and install them from Node.js official website. "},{"title":"Steps​","type":1,"pageTitle":"NPM","url":"/installation/npm#steps","content":"To integrate the PushFeedback widget into your site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback This will download and install the PushFeedback package into your project. Make sure you embed the styles and scripts in your primary JS or entry file: // Incorporate PushFeedback styles import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; // Initialize the PushFeedback widget import 'pushfeedback/dist/pushfeedback/pushfeedback.esm.js'; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"NPM","url":"/installation/npm#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"React","type":0,"sectionRef":"#","url":"/installation/react","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"React","url":"/installation/react#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A React application and Node.js and npm installed. If not, download and install them from Node.js official website. "},{"title":"Steps​","type":1,"pageTitle":"React","url":"/installation/react#steps","content":"Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback info If you're using yarn as your package manager, run yarn add pushfeedback instead of the npm command above. This will download and install the PushFeedback package into your project. In the main component where you wish to place the feedback button (often src/App.js), embed the PushFeedback button: import React, { useEffect } from 'react'; import { applyPolyfills, defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function App() { useEffect(() =&gt; { applyPolyfills().then(() =&gt; { defineCustomElements(window); }); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; &lt;/div&gt; ); } export default App; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. TypeScript projects If you're using TypeScript in your React project, you might encounter type errors related to the feedback-button. To fix this, you can extend the global type definitions to include the custom elements from PushFeedback. In a d.ts file (e.g., src/global.d.ts), add: declare namespace JSX { interface IntrinsicElements { 'feedback-button': any; } } Start your Next.js app by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"React","url":"/installation/react#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"Sphinx","type":0,"sectionRef":"#","url":"/installation/sphinx","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Sphinx","url":"/installation/sphinx#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Sphinx project. "},{"title":"Steps​","type":1,"pageTitle":"Sphinx","url":"/installation/sphinx#steps","content":"To integrate the PushFeedback widget into your Sphinx site: Open the Sphinx configuration file (conf.py) in your project's root directory. Add the following code to the html_context section: html_context = { 'css_files': [ # Existing CSS files (if any) 'https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css', ], 'script_files': [ # Existing JS scripts (if any) 'https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js', ], } info If you already have a css_files or script_files list inside html_context, just append the PushFeedback entries without duplicating the entire structure. You'll want the feedback button to appear on each page of your documentation. One way to ensure this is to insert it into the Sphinx theme's footer. To do this: Create a _templates directory in your Sphinx project if it doesn't already exist.Create a _templates, create a file named layout.html.Now, inside layout.html, extend the base layout and add your feedback button: {% extends &quot;!layout.html&quot; %} {% block footer %} {{ super() }} &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; {% endblock %} Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open conf.py in your Sphinx project root and ensure you've added _templates to the templates path: templates_path = ['_templates']  Now build your Sphinx documentation: make html Once built, open your documentation in a web browser. Verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Sphinx","url":"/installation/sphinx#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"Wordpress","type":0,"sectionRef":"#","url":"/installation/wordpress","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Wordpress","url":"/installation/wordpress#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Wordpress website. "},{"title":"Steps​","type":1,"pageTitle":"Wordpress","url":"/installation/wordpress#steps","content":"danger Always back up your theme files before making modifications. In case of issues, the backup allows you to restore the original files. To embed the PushFeedback widget into your WordPress site: Access the admin dashboard of your WordPress website by navigating to http://yourwebsite.com/wp-admin/. Add the PushFeedback styles and scripts: Navigate to Appearance &gt; Theme Editor.From the right sidebar, select the header.php file to edit the &lt;head&gt; section.Insert the following code within the &lt;head&gt; section: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; To insert the feedback button just before the &lt;/body&gt; tag: While still in the Theme Editor, locate and click on the footer.php file from the right sidebar. Just before the &lt;/body&gt; tag, paste the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot;&gt;Send feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Once you've saved your changes, visit your WordPress website in a web browser. Confirm that the feedback button is visible and operational. "},{"title":"Next steps​","type":1,"pageTitle":"Wordpress","url":"/installation/wordpress#next-steps","content":"Dive deeper into customization and explore additional features in our Configuration section of the documentation. "},{"title":"Support","type":0,"sectionRef":"#","url":"/support","content":"","keywords":""},{"title":"Getting started​","type":1,"pageTitle":"Support","url":"/support#getting-started","content":"Quickstart: Need help installing PushFeedback? This guide covers all the steps to get you started.Installation guides: Step-by-step installation guides for a range of programming languages and frameworksConfiguration guides: Learn how to configure PushFeedback to match your site's design and requirements.Integration guides: Connect PushFeedback to your existing tools and workflows. "},{"title":"Frequently asked questions (FAQs)​","type":1,"pageTitle":"Support","url":"/support#frequently-asked-questions-faqs","content":"See our FAQs for answers to common questions about PushFeedback. "},{"title":"Contact us​","type":1,"pageTitle":"Support","url":"/support#contact-us","content":"If you can't find the solution to your problem or have further questions, don't hesitate to reach out at support@pushfeedback.com. We're here to help! Our support team is available Monday to Friday, from 9 AM to 5 PM EST. We aim to respond to all queries within 48 hours. "},{"title":"Feedback​","type":1,"pageTitle":"Support","url":"/support#feedback","content":"Your feedback is valuable to us! If you have suggestions or feedback about our platform or support, please let us know. "},{"title":"Email","type":0,"sectionRef":"#","url":"/integrations/email","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Email","url":"/integrations/email#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Steps​","type":1,"pageTitle":"Email","url":"/integrations/email#steps","content":"To activate the email notification integration in PushFeedback, follow the steps outlined below: [GIF]  Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Edit button. Move to the second step of the wizard, Email notification setup. Input the email addresses of the team members you'd like to notify when feedback is received. info PushFeedback lets you configure up to three email addresses. If you need to notify more recipients, consider using an email distribution list. Save your changes by clicking Next, then Submit on the final step of the wizard. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The specified email addresses should receive the feedback. "}]